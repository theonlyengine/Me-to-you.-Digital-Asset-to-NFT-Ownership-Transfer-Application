# INSTALL WEB3
npm install web3


#UPDATE NFT UTILITY FUNCTION
// backend/utils/nft.js
const Web3 = require('web3');
const AssetNFT = require('../contracts/AssetNFT.json');
const web3 = new Web3('http://localhost:7545');

const createNFT = async (recipient, assetType, description, document) => {
  const networkId = await web3.eth.net.getId();
  const deployedNetwork = AssetNFT.networks[networkId];
  const contract = new web3.eth.Contract(AssetNFT.abi, deployedNetwork.address);
  const accounts = await web3.eth.getAccounts();
  const tokenURI = `https://api.yourdomain.com/metadata/${document}`;
  const result = await contract.methods.mintNFT(recipient, tokenURI).send({ from: accounts[0] });
  return result.events.Transfer.returnValues.tokenId;
};

module.exports = { createNFT };

# INTEGRATE ASSET ROUTES

// backend/routes/asset.js
const express = require('express');
const router = express.Router();
const jwt = require('jsonwebtoken');
const Asset = require('../models/Asset');
const { createNFT } = require('../utils/nft');

// Middleware to authenticate user
const authenticate = (req, res, next) => {
  const token = req.header('Authorization').replace('Bearer ', '');
  const decoded = jwt.verify(token, process.env.JWT_SECRET);
  req.userId = decoded.id;
  next();
};

// Upload asset and create NFT
router.post('/upload', authenticate, async (req, res) => {
  const { assetType, description, document } = req.body;
  const nftAddress = await createNFT(req.userId, assetType, description, document);
  const newAsset = new Asset({
    owner: req.userId,
    assetType,
    description,
    document,
    nftAddress
  });
  await newAsset.save();
  res.status(201).json(newAsset);
});

module.exports = router;
